<?php
/**
 * Process Stripe Payment
 *
 */
if ( ! function_exists( 'tt_stripe_process_payment' ) ) {
	function tt_stripe_process_payment() {

		global $realty_theme_option,$current_user;
		$current_user = wp_get_current_user();

		if ( isset( $_POST['action'] ) && $_POST['action'] == 'stripe' && wp_verify_nonce( $_POST['stripe_nonce'], 'stripe-nonce' ) ) {

			// load the stripe libraries
			require_once( REALTY_CORE_PLUGIN_DIR_URL . '/lib/stripe/lib/Stripe.php' );

			// retrieve the token generated by stripe.js
			$token = $_POST['stripeToken'];
			if ( isset( $_POST['stripeEmail'] ) && $_POST['stripeEmail'] ) {
				$email_user = strip_tags( trim( $_POST['stripeEmail'] ) );
			} else {
				$email_user = '';
			}

			if ( isset( $realty_theme_option['stripe-api-secret-key'] ) && $realty_theme_option['stripe-api-secret-key'] ) {
				$secret_key =  strip_tags( trim( $realty_theme_option['stripe-api-secret-key'] ) );
			} else {
				$secret_key = '';
			}

			Stripe::setApiKey( $secret_key );

			if ( isset( $_POST['stripe_plan'] ) && $_POST['stripe_plan'] ) { // Process recurring payment

				// Recurring payment setup goes here
				$default_plan_id = base64_decode( $_POST['stripe_plan'] );
				$plan_id = get_post_meta( $default_plan_id, 'estate_package_stripe_id', true );
				//$plan_id = strip_tags( trim( get_post_meta( base64_decode( $_POST['stripe_plan'] ) ) ), 'estate_package_stripe_id', true );

				try {

					$customer = Stripe_Customer::create( array(
							'source' => $token,
							'plan' => $plan_id,
							'email' => $email_user,
					) );

					$invoice_id = tt_create_user_invoice( $current_user->ID, $default_plan_id, 'Stripe' );
					tt_user_properties_publish_on_package_update( $current_user->ID );

					// Redirect on successful recurring payment setup
					$redirect = add_query_arg( 'payment', 'paid', $_POST['redirect'] );

				} catch ( Exception $e ) {

					// Redirect on failure
					$body = $e->getJsonBody();
	                $err  = $body['error'];
					print( 'ERROR:' . $err['message'] . "\n" );
	  			$redirect = add_query_arg( 'payment', $e->getMesssage(), $_POST['redirect'] );

				}

			} else { // Process one-time payment

				// Attempt to charge the customer's card
				if ( isset( $_POST['stripe_charge'] ) && $_POST['stripe_charge'] ) {

					$property_id = base64_decode($_POST['stripe_charge']);

				  if ( isset( $property_id ) ) {
						$property_id = $property_id;
					}

					$stripe_enable_subscription = $realty_theme_option['paypal-enable-subscription'];
					$stripe_subscription_recurrence = $realty_theme_option['paypal-subscription-recurrence'];
					$stripe_subscription_period = $realty_theme_option['paypal-subscription-period'];
					$stripe_settings_amount = $realty_theme_option['paypal-amount'];
					$stripe_featured_amount = $realty_theme_option['paypal-featured-amount'];

					$property_extra_featured = get_post_meta( $property_id, 'estate_property_featured', true );

					if ( $property_extra_featured ) {
						$stripe_settings_amount = $stripe_settings_amount + $stripe_featured_amount;
					}

					$stripe_settings_currency_code = $realty_theme_option['paypal-currency-code'];

					try {

						$charge = Stripe_Charge::create( array(
								'amount' => $stripe_settings_amount*100, // $10
								'source' => $token,
								'currency' => $stripe_settings_currency_code,
								'description' => get_the_title( $property_id ) . '-' . $property_id,
								//'email' => $email_user,
							)
						);

						$invoice_id = tt_create_user_invoice( $current_user->ID, $property_id, 'Stripe' );
						$paypal_settings_auto_publish = $realty_theme_option['paypal-auto-publish'];

						if ( $paypal_settings_auto_publish ) {
							$property = array(
								'ID' => $property_id,
								'post_status' => 'publish',
							);
							wp_update_post( $property );
						}

						// Redirect on successful payment
						$redirect = add_query_arg( 'payment', 'paid', $_POST['redirect'] );

					} catch (Exception $e) {

						// Redirect on failed payment
						$redirect = add_query_arg( 'payment', 'failed', $_POST['redirect'] );

					}

				}

			} // One time payment

			// Redirect back to previous page with added query variable
			wp_redirect( $redirect );
			exit;

		}
	}
}
add_action( 'init', 'tt_stripe_process_payment', 20 );

/**
 * Scripts "Stripe"
 *
 */
if ( ! function_exists( 'tt_load_stripe_scripts' ) ) {
	function tt_load_stripe_scripts() {

		global $realty_theme_option;

		// check to see if we are in test mode
		$publishable = '';

		if ( isset( $realty_theme_option['stripe-api-publishable-key'] ) && $realty_theme_option['stripe-api-publishable-key'] ) {
			$publishable = $realty_theme_option['stripe-api-publishable-key'];
		}

		if ( is_singular( 'package' ) || is_page_template( 'template-property-submit-listing.php' ) ) {
			wp_enqueue_script( 'stripe', 'https://js.stripe.com/v2/' );
			wp_enqueue_script( 'stripe-processing', plugin_dir_url( __FILE__ ) . 'lib/stripe/js/stripe-processing.js' );
		}

		wp_localize_script( 'stripe-processing', 'stripe_vars', array( 'publishable_key' => $publishable ) );

	}
}
add_action( 'wp_enqueue_scripts', 'tt_load_stripe_scripts' );

/**
 * Payment Method "Stripe"
 *
 */
if ( ! function_exists( 'tt_stripe_payment_form' ) ) {
	function tt_stripe_payment_form( $plan_id = '' ) {

		global $realty_theme_option;
		$publishable_key = trim( $realty_theme_option['stripe-api-publishable-key'] );
		?>

			<form action="" method="POST" id="stripe-payment-form" style="display: inline-block">
	    	<script src="https://checkout.stripe.com/v2/checkout.js" class="stripe-button" data-key="<?php echo esc_attr( $publishable_key ); ?>" data-name="<?php bloginfo( 'name' ); ?>" data-description="<?php echo esc_attr( get_the_title( $plan_id ) ); ?>"></script>
				<input type="hidden" name="action" value="stripe"/>
				<?php if ( get_post_type( $plan_id ) == 'package' ) { ?>

					<input type="hidden" name="stripe_plan" value="<?php echo base64_encode( $plan_id ); ?>"/>
					<input type="hidden" name="redirect" value="<?php echo get_permalink(); ?>"/>

				<?php } else { ?>

					<?php
						$template_page_property_submit_listing_array = get_pages( array (
							'meta_key'   => '_wp_page_template',
							'meta_value' => 'template-property-submit-listing.php'
						) );
					?>

					<?php
						if ( $template_page_property_submit_listing_array ) {
							$submit_listing_page = $template_page_property_submit_listing_array[0]->ID;
						}
					?>

					<input type="hidden" name="stripe_charge" value="<?php echo base64_encode( $plan_id ); ?>"/>
					<input type="hidden" name="redirect" value="<?php echo get_permalink( $submit_listing_page ); ?>"/>

				<?php } ?>
				<input type="hidden" name="stripe_nonce" value="<?php echo wp_create_nonce( 'stripe-nonce' ); ?>"/>
			</form>

			<div class="payment-errors"></div>

			<?php if ( isset( $_GET['payment'] ) && $_GET['payment'] == 'paid' && get_post_type( $plan_id ) == 'package' ) { ?>

				<?php if ( get_post_type( $plan_id ) == 'package' ) { ?>
					<div class="alert alert-success" style="margin-top: 1em;"><?php esc_html_e( 'Thank you for your payment. You are successfully subscribed.', 'realty' ); ?></div>
				<?php } ?>

			<?php } ?>

	<?php
	}
}